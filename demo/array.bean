// Basic handle

array = ["lanzhiheng", "zhiheng", "lan"]

print(array.join("-"))
print(array.join(",    "))
print(array.join())

popArray = ["lanzhiheng", "zhiheng", "lan"]
print(popArray.pop())
print(popArray)

pushArray = ["lanzhiheng", "zhiheng", "lan"]
print(pushArray.push("1234"))
print(pushArray)

shiftArray = ["lanzhiheng", "zhiheng", "lan"]
print(shiftArray.shift())
print(shiftArray)

unshiftArray = ["lanzhiheng", "zhiheng", "lan"]
print(unshiftArray.unshift("1233"))
print(unshiftArray)

findArray = [1, 2, 3, "lanzhiheng"]
print(findArray.find(fn(a) {
  a == 2
}))

print(findArray.find(fn(a) {
  a == "lanzhiheng"
}))

// Have some issue
findArrayStr = ["lanzhiheng", "string"]
print(findArrayStr.find(fn cb(a) {
  a.equal("lan")
  // print(cb)
}))


mapArray = [1, 2, 3, 4]
print(mapArray.map(fn(a) {
 a * 300
}))

print(mapArray.map(fn(a, b) { // all is nil
 b
}))

reduceArray = [1, 2, 3, 4]

print(reduceArray.reduce(fn(a, b) {
  return a + b
}, 0))

print(reduceArray.reduce(fn(a, b) {
  return a * b
}, 1))

reduceStrArray = ["lanzhiheng", "zhiheng"]
print(reduceStrArray.reduce(fn(a,b) {
  return b.concat(a)
}, ""))

// reduceStrArray.a = 1
print(reduceStrArray.__proto__)

reverseArray = [1, 2, 3, 4, "string"]
print(reverseArray.reverse())
reverseArray = []
print(reverseArray.reverse())

// join different type
joinDiff = [1,2,3,4,5,"lanzhiheng"]
print(joinDiff)
print(joinDiff.join(","))


// each

eachArr = [1,2,3,4,6]

eachArr.each(fn (i, c) {
  print(i, c)
})

eachArr.each(fn (i) {
fn hello() {
print(self)
}
print(self)

hello()
})

b = {
  console: fn(a) {
    print(a)
  }
}

a = {
  hello: fn(target) {
    while (target) {
      if (target) {
        return self;
      }
      return 100
    }
  }
}

print(a.hello(true))
print(a.hello(false))
